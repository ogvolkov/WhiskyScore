package WhiskyScoreParser;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

import com.itextpdf.text.pdf.parser.*;

public class OrderedPdfTextListener implements RenderListener{
		private final float yTolerance;
	
		private final ArrayList<PdfTextBlock> textBlocks = new ArrayList<PdfTextBlock>();
		
		public OrderedPdfTextListener(float yTolerance)
		{
			this.yTolerance = yTolerance;
		}
		
		public void clear()
		{
			textBlocks.clear();
		}
		
		public void sort()
		{
			Collections.sort(textBlocks, new Comparator<PdfTextBlock>(){
				public int compare(PdfTextBlock first, PdfTextBlock second){
					if (first.getY() < second.getY() - yTolerance) return -1;
					if (first.getY() > second.getY() + yTolerance) return +1;
				}
			});
		}
		
		@Override
		public void renderText(TextRenderInfo renderInfo) {
			String text = renderInfo.getText();			
			Vector origin = renderInfo.getBaseline().getStartPoint();
			textBlocks.add(new PdfTextBlock(text, origin.get(Vector.I2), origin.get(Vector.I1)));			
		}

		@Override
		public void beginTextBlock() {					
		}

		@Override
		public void endTextBlock() {			
		}

		@Override
		public void renderImage(ImageRenderInfo arg0) {			
		}	
}
