package WhiskyScoreParser;

import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import com.itextpdf.text.pdf.*;
import com.itextpdf.text.pdf.parser.*;

public class ClassicDramParser {
	public void Parse(InputStream stream) throws IOException{	
		PdfReader pdfReader = null;				
		
		try{
			pdfReader = new PdfReader(stream);
			OrderedPdfTextListener textListener = new OrderedPdfTextListener(5.0f);
			PdfContentStreamProcessor contentProcessor = new PdfContentStreamProcessor(textListener);
			
			int pages = 2/*pdfReader.getNumberOfPages()*/;
						
			for(int page=2; page <= pages; page++){
				textListener.clear();
				
				PdfDictionary pageDictionary = pdfReader.getPageN(page);
				PdfDictionary resourceDictionary = pageDictionary.getAsDict(PdfName.RESOURCES);
				
				byte[] pageData = ContentByteUtils.getContentBytesForPage(pdfReader, page);
				contentProcessor.processContent(pageData, resourceDictionary);
				
				for(List<String> line: textListener.getLines()){
					ProcessLine(line);
				}
			}
		}
		finally{
			if (pdfReader != null)
			{
				pdfReader.close();
			}
		}
	}	
	
	private void ProcessLine(List<String> line){
		String firstElement = line.get(0);		
		// TODO: handle multi-line cells
	}
	
	private static Boolean isFloat(String text){		
		try{
			Float.parseFloat(text);
			return true;
		}
		catch(NumberFormatException e){
			return false;
		}
	}
}